#include <SimpleZigBeeRadio.h>
#include <SoftwareSerial.h>
#define trigPin 13
#define echoPin 12

SimpleZigBeeRadio xbee = SimpleZigBeeRadio();

SoftwareSerial xbeeSerial(2, 3); // (RX=>DOUT, TX=>DIN Shield DLINE uses 2,3)

int val = 0;
uint8_t payload[] = {0x00,0x00};
unsigned long time = 0;
unsigned long last_sent = 0;

void setup() {
    // Start the serial ports ...
    Serial.begin( 9600 );
    pinMode(trigPin, OUTPUT);
    pinMode(echoPin, INPUT);
    xbeeSerial.begin( 9600 );
    // ... and set the serial port for the XBee radio.
    xbee.setSerial( xbeeSerial );
    // Set a non-zero frame id to receive Status and Response packets.
    xbee.setAcknowledgement(true);
}

void loop() {
    // If data is waiting in the XBee serial port ...
    while( xbee.available() ){
        // ... read the data.
        xbee.read();
        // If a complete message is available, display the contents
        if( xbee.isComplete() ){
            Serial.print("\nIncoming Message: ");
//            printPacket( xbee.getIncomingPacketObject() );
        }
    }
    int duration, distance;
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2); 
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
    duration = pulseIn(echoPin, HIGH);
    distance = (duration/2) / 29.1;
    //Serial.print(distance);
    //Serial.println(" cm");
    val = distance;
    
    time = millis();
    if(time > (last_sent+5000)) {
      last_sent = time;
      payload[0] = val >> 8 & 0xff;
      payload[1] = val & 0xff;
      xbee.prepareTXRequestToCoordinator( payload, 2);
      xbee.send();    
      // Serial.print("\nSend: ");
      //printPacket( xbee.getOutgoingPacketObject() );
    }
    delay(10); // Small delay for stability
}

/*
void printPacket(SimpleZigBeePacket & p){
    Serial.print( START, HEX );
    Serial.print(' ');
    Serial.print( p.getLengthMSB(), HEX );
    Serial.print(' ');
    Serial.print( p.getLengthLSB(), HEX );
    Serial.print(' ');
    // Frame Type and Frame ID are stored in Frame Data
    uint8_t checksum = 0;
    for( int i=0; i<p.getFrameLength(); i++){
        Serial.print( p.getFrameData(i), HEX );
        Serial.print(' ');
        checksum += p.getFrameData(i);
    }
    // Calculate checksum based on summation of frame bytes
    checksum = 0xff - checksum;
    Serial.print(checksum, HEX );
    Serial.println();
}*/
